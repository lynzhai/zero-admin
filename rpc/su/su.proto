syntax = "proto3";


package su;


message SubjectInfo {
  int64        Id = 1;
  string       Uuid = 2;
  string       Name = 3;
  int64        Status = 4;
  string       Code = 5;
  int64        MaxPersion = 6;
  int64        MainTeacherId = 7;
  int64        AssistantTeacherId = 8;
  string       Introduce = 9;
  string       Backup = 10;
  string       CreateTime = 11;
  string       UpdateTime = 12;
  string       DeleteTime = 13;
}

message SubjectAddReq{
  string       Name = 1;
  int64        Status = 2;
  string       Code = 3;
  int64        MaxPersion = 4;
  int64        MainTeacherId = 5;
  int64        AssistantTeacherId = 6;
  string       Introduce = 7;
  string       Backup = 8;
}

message SubjectAddResp{
  bool Result = 1;
  SubjectInfo SubjectInfoData = 2;
}

message MainTeacherSubjectListReq{
  int64 Id = 1;
  int64 Offset = 2;
  int64 PageSize = 3;
}
message MainTeacherSubjectListReap{
  int64     Total = 1;
  repeated  SubjectInfo List = 2;
}


message SubjectUpdateReq{
  int64       Id = 1;
  string      Uuid = 2;
  string       Name = 3;
  int64        Status = 4;
  string       Code = 5;
  int64        MaxPersion = 6;
  int64        MainTeacherId = 7;
  int64        AssistantTeacherId = 8;
  string       Introduce = 9;
  string       Backup = 10;
}

message SubjectUpdateResp{
  bool Result = 1;
  SubjectInfo SubjectInfoData = 2;
}

message SubjectDeleteReq{
  int64 Id = 1;
}

message SubjectDeleteResp{
  bool Result = 1;
}

message SubjectFindReq{
  int64 SubjectId = 1;
}

message SubjectFindResp{
  SubjectInfo SubjectInfoData = 1;
}

message SubjectLearnInfo{
  int64        Id = 1;
  int64        UserId = 2;
  int64        SubjectId = 3;
  string       CreateTime = 4;
}

message SubjectLearnAddReq{
  int64        UserId = 1;
  int64        SubjectId = 2;
}

message SubjectLearnAddResp{
  bool Result = 1;
  SubjectLearnInfo SubjectLearnInfoData = 2;
}

message SubjectLearnDeleteReq{
  int64        Id = 1;
}

message SubjectLearnDeleteResp{
  bool Result = 1;
}

message SubjectLearnUpdateReq{
  int64        Id = 1;
  int64        UserId = 2;
  int64        SubjectId = 3;
}

message SubjectLearnUpdateResp{
  bool Result = 1;
  SubjectLearnInfo SubjectLearnInfoData = 2;
}

message SubjectLearnFindReq{
  int64 Id = 1;
}

message SubjectLearnFindResp{
  SubjectLearnInfo SubjectLearnInfoData = 1;
}

message SubjectLearnFindListByUserIdReq{
  int64 UserId = 1;
  int64 Offset = 2;
  int64 PageSize = 3;
}

message SubjectLearnFindListByUserIdResp{
  int64     Total = 1;
  repeated  SubjectLearnInfo List = 2;
}

message SubjectLearnFindListBySubjectIdReq{
  int64 SubjectId = 1;
  int64 Offset = 2;
  int64 PageSize = 3;
}

message SubjectLearnFindListBySubjectIdResp{
  int64     Total = 1;
  repeated  SubjectLearnInfo List = 2;
}


message PersionInfo {
  int64        Id = 1;
  string       PhoneNumber = 2;
  string       Password = 3;
  string       UniqueId = 4;
  string       Number = 5;
  string       Email = 6;
  string       Gender = 7;
  string       Name = 8;
  int64        RoleId = 9;
  int64        RoleTypeId = 10;
  string       RoleType = 11;
  string       CreateTime = 12;
  string       UpdateTime = 13;
  string       ClassName = 14;
  string       Academy = 15;
  string       School = 16;
  string       Grade = 17;
  int64        State = 18;
  string       SecretCode = 19;
}

message FindStudentsInSubjectReq{
  int64 SubjectId = 2;
  int64 Offset = 3;
  int64 PageSize = 4;
}



message FindStudentsInSubjectResp{
  int64     Total = 1;
  repeated  PersionInfo List = 2;
}


message FindSubjectByStudentReq{
  int64 UserId = 1;
  int64 Offset = 2;
  int64 PageSize = 3;
}

message FindSubjectByStudentResp{
  int64     Total = 1;
  repeated  SubjectInfo List = 2;
}

message AddStudentToSubjectReq{
  int64 UserId = 1;
  int64 SubjectId = 2;

}

message AddStudentToSubjectResp{
  bool Result = 1;
}

message DeleteStudentInSubjectReq{
  int64 UserId = 1;
  int64 SubjectId = 2;

}

message DeleteStudentInSubjectResp{
  bool Result = 1;
}


message SignalChoiceInfo{
  string Id = 1;
  string Type = 2;
  string Title = 3;
  string AAnswer = 4;
  string BAnswer = 5;
  string CAnswer = 6;
  string DAnswer = 7;
  string EAnswer = 8;
  string FAnswer = 9;
  string CorrectAnswer = 10;
  string Version = 11;
  string CreateTime = 12;
  string UpdateTime = 13;
  bool   Deleted = 14;
  string deleteTime = 15;
}

message AddSignalChoiceReq{

  string Title = 1;
  string Type = 2;
  string AAnswer = 3;
  string BAnswer = 4;
  string CAnswer = 5;
  string DAnswer = 6;
  string EAnswer = 7;
  string FAnswer = 8;
  string CorrectAnswer = 9;
  string Version = 10;

}

message AddSignalChoiceResp{
  bool Result = 1;
  SignalChoiceInfo SignalChoice = 2;
}

message UpdateSignalChoiceReq{
  string Id = 1;
  string Type = 2;
  string Title = 3;
  string AAnswer = 4;
  string BAnswer = 5;
  string CAnswer = 6;
  string DAnswer = 7;
  string EAnswer = 8;
  string FAnswer = 9;
  string CorrectAnswer = 10;
  string Version = 11;
}

message UpdateSignalChoiceResp{
  bool Result = 1;
  SignalChoiceInfo SignalChoice = 2;
}

message DeleteSignalChoiceReq{
  string Id = 1;
}

message DeleteSignalChoiceResp{
  bool Result = 1;
}

message FindSignalChoiceReq{
  string Id = 1;
}

message FindSignalChoiceResp{
  SignalChoiceInfo SignalChoice = 1;
}


// AddSelfPaper 时，any 选择题返回的结构体
message SubjectNumberAndIdPair{
  int64  SubjectNumber = 1;
  string SubjectId = 2;
  string Type = 3;
}


// FindSelfPaper 时，any 选择题返回的结构体
message SignalChoiceWithSerial{
  int64  SubjectNumber = 1;
  string Type = 2;
  SignalChoiceInfo SignalChoice = 3;
}



message ParagraphInstruction{
  string  Instruction = 1;
  string  Type = 2;
}

message PageBar{
  string  Instruction = 1;
  int64   CurrentPage = 2;
  int64   TotalPage = 3;
  string  Type = 4;
}

message RandomSetting  {
  int64 StartNumber  = 1;
  int64 EndNumber = 2;
  int64 SubjectCount = 3;
}
//message BigSubjectAny {
//  string TypeUrl = 1;
//  bytes Value = 2;
//}

message PaperItem{
  string type = 1;
  PageBar PageBar = 2;
  ParagraphInstruction ParagraphInstruction = 3;
  SubjectNumberAndIdPair SubjectNumberAndIdPair = 4;
  SignalChoiceWithSerial SignalChoiceWithSerial = 5;
}

message SelfPaperInfo{
  string Id = 1;
  string PaperName = 2;
  int64  CreaterId = 3;
  int64  Status = 4;
  string StartTime = 5;
  string StopTime = 6;
  string Version = 7;
  string CreateTime = 8;
  string UpdateTime = 9;
  string DeleteTime = 10;
  bool  Deleted = 11;
  repeated PaperItem PaperItems = 12;
  repeated RandomSetting RandomSettings = 13;
  //SignalChoiceBig SignalChoiceBig = 11;
}


message AddSelfPaperReq{
  string Id = 1;
  string PaperName = 2;
  int64  CreaterId = 3;
  int64  Status = 4;
  string StartTime = 5;
  string StopTime = 6;
  string Version = 7;
  repeated PaperItem PaperItems = 8;
  repeated RandomSetting RandomSettings = 9;
}

message  AddSelfPaperResp{
  bool Result = 1;
  string Id = 2;
}


message UpdateSelfPaperReq{
  string   Id = 1;
  string   PaperName = 2;
  int64    CreaterId = 3;
  int64    Status = 4;
  string   StartTime = 5;
  string   StopTime = 6;
  string   Version = 7;
  repeated PaperItem PaperItems = 8;
  repeated RandomSetting RandomSettings = 9;
}

message  UpdateSelfPaperResp{
  bool Result = 1;
}

message DeleteSelfPaperReq{
  string Id = 1;
}

message  DeleteSelfPaperResp{
  bool Result = 1;
}

message FindSelfPaperReq{
  string Id = 1;
}

message  FindSelfPaperResp{
  SelfPaperInfo SelfPaper = 1;
}

service Su {
  rpc SubjectAdd(SubjectAddReq) returns(SubjectAddResp);
  rpc SubjectList(MainTeacherSubjectListReq) returns(MainTeacherSubjectListReap);
  rpc SubjectUpdate(SubjectUpdateReq) returns(SubjectUpdateResp);
  rpc SubjectDelete(SubjectDeleteReq) returns(SubjectDeleteResp);

  // 根据subjectid 查抄subject 表内容
  rpc SubjectFind(SubjectFindReq) returns(SubjectFindResp);
  // 查询某个Subject中的学生内容
  rpc FindStudentsInSubject(FindStudentsInSubjectReq) returns(FindStudentsInSubjectResp);
  // 查询课程中的 学生信息
  rpc FindSubjectByStudent(FindSubjectByStudentReq) returns(FindSubjectByStudentResp);
  // 添加学生到课程
  rpc AddStudentToSubject(AddStudentToSubjectReq) returns(AddStudentToSubjectResp);
  // 从课程中删除学生
  rpc DeleteStudentInSubject(DeleteStudentInSubjectReq) returns(DeleteStudentInSubjectResp);

  rpc SubjectLearnAdd(SubjectLearnAddReq) returns(SubjectLearnAddResp);
  rpc SubjectLearnUpdate(SubjectLearnUpdateReq) returns(SubjectLearnUpdateResp);
  rpc SubjectLearnDelete(SubjectLearnDeleteReq) returns(SubjectLearnDeleteResp);
  rpc SubjectLearnFind(SubjectLearnFindReq) returns(SubjectLearnFindResp);
  rpc SubjectLearnFindLisByUserId(SubjectLearnFindListByUserIdReq) returns(SubjectLearnFindListByUserIdResp);
  rpc SubjectLearnFindLisBySubjectId(SubjectLearnFindListBySubjectIdReq) returns(SubjectLearnFindListBySubjectIdResp);


  rpc AddSignalChoice(AddSignalChoiceReq) returns(AddSignalChoiceResp);
  rpc UpdateSignalChoice(UpdateSignalChoiceReq) returns(UpdateSignalChoiceResp);
  rpc DeleteSignalChoice(DeleteSignalChoiceReq) returns(DeleteSignalChoiceResp);
  rpc FindSignalChoice(FindSignalChoiceReq) returns(FindSignalChoiceResp);

  rpc AddSelfPaper(AddSelfPaperReq) returns(AddSelfPaperResp);
  rpc UpdateSelfPaper(UpdateSelfPaperReq) returns(UpdateSelfPaperResp);
  rpc DeleteSelfPaper(DeleteSelfPaperReq) returns(DeleteSelfPaperResp);
  rpc FindSelfPaper(FindSelfPaperReq) returns(FindSelfPaperResp);

}

